version: '3'

networks:
  garbage:
    driver: bridge

services:
  eventsvc:
    build:
      context: ../
      dockerfile: ./docker/eventsvc/Dockerfile
    depends_on:
      - eventsvc_db
    environment:
      - GRPC_PORT=3000
      - GRPC_AUTH_SERVICE_ADDR=authsvc:3000
      - GRPC_AUTH_SERVICE_TIMEOUT=500ms
      - REST_PORT=4000
      - POSTGRES_DB=event
      - POSTGRES_HOST=eventsvc_db
      - POSTGRES_PORT=5432
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_MAX_CONN=20
      - POSTGRES_LOG=false
      - POSTGRES_CONN_LIFE=5m
      - POSTGRES_SIMPLE_PROTOCOL=false
    networks:
      - garbage
    ports:
      - "3000"
      - "4000"
    restart: on-failure

  authsvc:
    build:
      context: ../
      dockerfile: ./docker/authsvc/Dockerfile
    depends_on:
      - authsvc_db
    environment:
      - GRPC_PORT=3000
      - REST_PORT=4000
      - POSTGRES_DB=auth
      - POSTGRES_HOST=authsvc_db
      - POSTGRES_PORT=5432
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_MAX_CONN=20
      - POSTGRES_LOG=false
      - POSTGRES_CONN_LIFE=5m
      - POSTGRES_SIMPLE_PROTOCOL=false
      - TOKEN_PRIVATE_KEY_PATH=/keys/test.rsa
      - TOKEN_PUBLIC_KEY_PATH=/keys/test.rsa.pub
    networks:
      - garbage
    ports:
      - "3000"
      - "4000"
    restart: on-failure

  authsvc_db:
    image: postgres:12.2
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: auth
    networks:
      - garbage
    ports:
      - "5432"
    restart: always
    volumes:
      - ./authsvc/postgres-init.sql:/docker-entrypoint-initdb.d/postgres-init.sql

  eventsvc_db:
    image: postgres:12.2
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: event
    networks:
      - garbage
    ports:
      - "5432"
    restart: always
    volumes:
      - ./eventsvc/postgres-init.sql:/docker-entrypoint-initdb.d/postgres-init.sql

  nginx:
    image: nginx:alpine
    networks:
      - garbage
    ports:
    - "443:443"
    restart: always
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ../cert/:/etc/nginx/cert/
