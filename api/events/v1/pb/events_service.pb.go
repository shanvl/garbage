// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.2
// source: events_service.proto

package eventsv1pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FindClassesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Letter       string               `protobuf:"bytes,1,opt,name=letter,proto3" json:"letter,omitempty"`
	DateFormed   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=date_formed,json=dateFormed,proto3" json:"date_formed,omitempty"`
	EventFilters *EventFilters        `protobuf:"bytes,3,opt,name=event_filters,json=eventFilters,proto3" json:"event_filters,omitempty"`
	Sorting      string               `protobuf:"bytes,4,opt,name=sorting,proto3" json:"sorting,omitempty"`
	EventSorting string               `protobuf:"bytes,5,opt,name=event_sorting,json=eventSorting,proto3" json:"event_sorting,omitempty"`
	Amount       uint32               `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Skip         uint32               `protobuf:"varint,7,opt,name=skip,proto3" json:"skip,omitempty"`
}

func (x *FindClassesRequest) Reset() {
	*x = FindClassesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindClassesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindClassesRequest) ProtoMessage() {}

func (x *FindClassesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_events_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindClassesRequest.ProtoReflect.Descriptor instead.
func (*FindClassesRequest) Descriptor() ([]byte, []int) {
	return file_events_service_proto_rawDescGZIP(), []int{0}
}

func (x *FindClassesRequest) GetLetter() string {
	if x != nil {
		return x.Letter
	}
	return ""
}

func (x *FindClassesRequest) GetDateFormed() *timestamp.Timestamp {
	if x != nil {
		return x.DateFormed
	}
	return nil
}

func (x *FindClassesRequest) GetEventFilters() *EventFilters {
	if x != nil {
		return x.EventFilters
	}
	return nil
}

func (x *FindClassesRequest) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *FindClassesRequest) GetEventSorting() string {
	if x != nil {
		return x.EventSorting
	}
	return ""
}

func (x *FindClassesRequest) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *FindClassesRequest) GetSkip() uint32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

type FindClassesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Classes []*ClassAggr `protobuf:"bytes,1,rep,name=classes,proto3" json:"classes,omitempty"`
}

func (x *FindClassesResponse) Reset() {
	*x = FindClassesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindClassesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindClassesResponse) ProtoMessage() {}

func (x *FindClassesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_events_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindClassesResponse.ProtoReflect.Descriptor instead.
func (*FindClassesResponse) Descriptor() ([]byte, []int) {
	return file_events_service_proto_rawDescGZIP(), []int{1}
}

func (x *FindClassesResponse) GetClasses() []*ClassAggr {
	if x != nil {
		return x.Classes
	}
	return nil
}

var File_events_service_proto protoreflect.FileDescriptor

var file_events_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x73, 0x68, 0x61, 0x6e, 0x76, 0x6c, 0x2e, 0x67,
	0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x0c, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e, 0x02, 0x0a, 0x12, 0x46,
	0x69, 0x6e, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x48, 0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x73, 0x68, 0x61, 0x6e, 0x76, 0x6c, 0x2e, 0x67, 0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x22, 0x51, 0x0a, 0x13, 0x46,
	0x69, 0x6e, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x68, 0x61, 0x6e, 0x76, 0x6c, 0x2e, 0x67, 0x61, 0x72,
	0x62, 0x61, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x41, 0x67, 0x67, 0x72, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x32, 0x8a,
	0x01, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x79, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x29, 0x2e, 0x73, 0x68, 0x61, 0x6e, 0x76, 0x6c, 0x2e, 0x67, 0x61, 0x72, 0x62, 0x61, 0x67, 0x65,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x68, 0x61,
	0x6e, 0x76, 0x6c, 0x2e, 0x67, 0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x42, 0x0e, 0x5a, 0x0c, 0x2e,
	0x3b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x76, 0x31, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_events_service_proto_rawDescOnce sync.Once
	file_events_service_proto_rawDescData = file_events_service_proto_rawDesc
)

func file_events_service_proto_rawDescGZIP() []byte {
	file_events_service_proto_rawDescOnce.Do(func() {
		file_events_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_events_service_proto_rawDescData)
	})
	return file_events_service_proto_rawDescData
}

var file_events_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_events_service_proto_goTypes = []interface{}{
	(*FindClassesRequest)(nil),  // 0: shanvl.garbage.events.FindClassesRequest
	(*FindClassesResponse)(nil), // 1: shanvl.garbage.events.FindClassesResponse
	(*timestamp.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*EventFilters)(nil),        // 3: shanvl.garbage.events.EventFilters
	(*ClassAggr)(nil),           // 4: shanvl.garbage.events.ClassAggr
}
var file_events_service_proto_depIdxs = []int32{
	2, // 0: shanvl.garbage.events.FindClassesRequest.date_formed:type_name -> google.protobuf.Timestamp
	3, // 1: shanvl.garbage.events.FindClassesRequest.event_filters:type_name -> shanvl.garbage.events.EventFilters
	4, // 2: shanvl.garbage.events.FindClassesResponse.classes:type_name -> shanvl.garbage.events.ClassAggr
	0, // 3: shanvl.garbage.events.EventsService.FindClasses:input_type -> shanvl.garbage.events.FindClassesRequest
	1, // 4: shanvl.garbage.events.EventsService.FindClasses:output_type -> shanvl.garbage.events.FindClassesResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_events_service_proto_init() }
func file_events_service_proto_init() {
	if File_events_service_proto != nil {
		return
	}
	file_events_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_events_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindClassesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindClassesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_events_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_events_service_proto_goTypes,
		DependencyIndexes: file_events_service_proto_depIdxs,
		MessageInfos:      file_events_service_proto_msgTypes,
	}.Build()
	File_events_service_proto = out.File
	file_events_service_proto_rawDesc = nil
	file_events_service_proto_goTypes = nil
	file_events_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EventsServiceClient is the client API for EventsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventsServiceClient interface {
	FindClasses(ctx context.Context, in *FindClassesRequest, opts ...grpc.CallOption) (*FindClassesResponse, error)
}

type eventsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEventsServiceClient(cc grpc.ClientConnInterface) EventsServiceClient {
	return &eventsServiceClient{cc}
}

func (c *eventsServiceClient) FindClasses(ctx context.Context, in *FindClassesRequest, opts ...grpc.CallOption) (*FindClassesResponse, error) {
	out := new(FindClassesResponse)
	err := c.cc.Invoke(ctx, "/shanvl.garbage.events.EventsService/FindClasses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventsServiceServer is the server API for EventsService service.
type EventsServiceServer interface {
	FindClasses(context.Context, *FindClassesRequest) (*FindClassesResponse, error)
}

// UnimplementedEventsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEventsServiceServer struct {
}

func (*UnimplementedEventsServiceServer) FindClasses(context.Context, *FindClassesRequest) (*FindClassesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindClasses not implemented")
}

func RegisterEventsServiceServer(s *grpc.Server, srv EventsServiceServer) {
	s.RegisterService(&_EventsService_serviceDesc, srv)
}

func _EventsService_FindClasses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindClassesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventsServiceServer).FindClasses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shanvl.garbage.events.EventsService/FindClasses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventsServiceServer).FindClasses(ctx, req.(*FindClassesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "shanvl.garbage.events.EventsService",
	HandlerType: (*EventsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindClasses",
			Handler:    _EventsService_FindClasses_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "events_service.proto",
}
