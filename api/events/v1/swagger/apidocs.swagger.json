{
  "swagger": "2.0",
  "info": {
    "title": "events.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/classes": {
      "get": {
        "summary": "FindClasses returns a list of sorted classes, each of which has a list of events that passed the given filters",
        "operationId": "EventsService_FindClasses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FindClassesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "letter",
            "description": "letter of the class.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dateFormed",
            "description": "date the class was formed on.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "eventFilters.from",
            "description": "include events occurred since this date.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "eventFilters.to",
            "description": "include events occurred up to this date.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "eventFilters.name",
            "description": "name of the event.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "eventFilters.resourcesAllowed",
            "description": "resources permitted to be brought to this event.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "RESOURCE_UNKNOWN",
                "RESOURCE_GADGETS",
                "RESOURCE_PAPER",
                "RESOURCE_PLASTIC"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sorting",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CLASS_SORTING_UNKNOWN",
              "CLASS_SORTING_GADGETS",
              "CLASS_SORTING_NAME_ASC",
              "CLASS_SORTING_NAME_DESC",
              "CLASS_SORTING_PAPER",
              "CLASS_SORTING_PLASTIC"
            ],
            "default": "CLASS_SORTING_UNKNOWN"
          },
          {
            "name": "eventSorting",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "EVENT_SORTING_UNKNOWN",
              "EVENT_SORTING_DATE_ASC",
              "EVENT_SORTING_DATE_DESC",
              "EVENT_SORTING_GADGETS",
              "EVENT_SORTING_NAME_ASC",
              "EVENT_SORTING_NAME_DESC",
              "EVENT_SORTING_PAPER",
              "EVENT_SORTING_PLASTIC"
            ],
            "default": "EVENT_SORTING_UNKNOWN"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "EventsService"
        ]
      }
    },
    "/v1/events": {
      "get": {
        "summary": "FindEvents returns a list of sorted events that passed the provided filters",
        "operationId": "EventsService_FindEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FindEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "filters.from",
            "description": "include events occurred since this date.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filters.to",
            "description": "include events occurred up to this date.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filters.name",
            "description": "name of the event.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters.resourcesAllowed",
            "description": "resources permitted to be brought to this event.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "RESOURCE_UNKNOWN",
                "RESOURCE_GADGETS",
                "RESOURCE_PAPER",
                "RESOURCE_PLASTIC"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sorting",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "EVENT_SORTING_UNKNOWN",
              "EVENT_SORTING_DATE_ASC",
              "EVENT_SORTING_DATE_DESC",
              "EVENT_SORTING_GADGETS",
              "EVENT_SORTING_NAME_ASC",
              "EVENT_SORTING_NAME_DESC",
              "EVENT_SORTING_PAPER",
              "EVENT_SORTING_PLASTIC"
            ],
            "default": "EVENT_SORTING_UNKNOWN"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "EventsService"
        ]
      },
      "post": {
        "summary": "CreateEvent creates and stores the event",
        "operationId": "EventsService_CreateEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateEventRequest"
            }
          }
        ],
        "tags": [
          "EventsService"
        ]
      }
    },
    "/v1/events/{eventId}/classes": {
      "get": {
        "summary": "FindEventClasses returns an array of sorted classes with the resources they brought to the specified event",
        "operationId": "EventsService_FindEventClasses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FindEventClassesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "className",
            "description": "text search field with a class name as it was on the date of the event (class name changes depending on the\nevent's date).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorting",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CLASS_SORTING_UNKNOWN",
              "CLASS_SORTING_GADGETS",
              "CLASS_SORTING_NAME_ASC",
              "CLASS_SORTING_NAME_DESC",
              "CLASS_SORTING_PAPER",
              "CLASS_SORTING_PLASTIC"
            ],
            "default": "CLASS_SORTING_UNKNOWN"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "EventsService"
        ]
      }
    },
    "/v1/events/{eventId}/pupils": {
      "get": {
        "summary": "FindEventPupils returns an array of sorted pupils with the resources they brought to the specified event",
        "operationId": "EventsService_FindEventPupils",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FindEventPupilsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nameAndClass",
            "description": "text search field with the combination of pupils names and classes names as they were on the date of the event\n(class name changes depending on the event's date).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorting",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PUPIL_SORTING_UNKNOWN",
              "PUPIL_SORTING_GADGETS",
              "PUPIL_SORTING_NAME_ASC",
              "PUPIL_SORTING_NAME_DESC",
              "PUPIL_SORTING_PAPER",
              "PUPIL_SORTING_PLASTIC"
            ],
            "default": "PUPIL_SORTING_UNKNOWN"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "EventsService"
        ]
      }
    },
    "/v1/events/{eventId}/pupils/{pupilId}": {
      "get": {
        "summary": "FindPupilByID returns a pupil with the given id with the resources they brought to that event",
        "operationId": "EventsService_FindEventPupilByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FindEventPupilByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pupilId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EventsService"
        ]
      },
      "put": {
        "summary": "ChangePupilResources changes the amount of resources brought by the pupil to the event",
        "operationId": "EventsService_ChangePupilResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pupilId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ChangePupilResourcesRequest"
            }
          }
        ],
        "tags": [
          "EventsService"
        ]
      }
    },
    "/v1/events/{id}": {
      "get": {
        "summary": "FindEventByID returns an event with the given id and all resources collected at that event",
        "operationId": "EventsService_FindEventByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FindEventByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EventsService"
        ]
      },
      "delete": {
        "summary": "DeleteEvent deletes the event",
        "operationId": "EventsService_DeleteEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EventsService"
        ]
      }
    },
    "/v1/pupils": {
      "get": {
        "summary": "FindPupils returns a list of sorted classes, each of which has a list of events that passed the given filters",
        "operationId": "EventsService_FindPupils",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FindPupilsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "nameAndClass",
            "description": "text search field that can be a combination of the name of a pupil and the name of their class.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "eventFilters.from",
            "description": "include events occurred since this date.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "eventFilters.to",
            "description": "include events occurred up to this date.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "eventFilters.name",
            "description": "name of the event.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "eventFilters.resourcesAllowed",
            "description": "resources permitted to be brought to this event.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "RESOURCE_UNKNOWN",
                "RESOURCE_GADGETS",
                "RESOURCE_PAPER",
                "RESOURCE_PLASTIC"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sorting",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PUPIL_SORTING_UNKNOWN",
              "PUPIL_SORTING_GADGETS",
              "PUPIL_SORTING_NAME_ASC",
              "PUPIL_SORTING_NAME_DESC",
              "PUPIL_SORTING_PAPER",
              "PUPIL_SORTING_PLASTIC"
            ],
            "default": "PUPIL_SORTING_UNKNOWN"
          },
          {
            "name": "eventSorting",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "EVENT_SORTING_UNKNOWN",
              "EVENT_SORTING_DATE_ASC",
              "EVENT_SORTING_DATE_DESC",
              "EVENT_SORTING_GADGETS",
              "EVENT_SORTING_NAME_ASC",
              "EVENT_SORTING_NAME_DESC",
              "EVENT_SORTING_PAPER",
              "EVENT_SORTING_PLASTIC"
            ],
            "default": "EVENT_SORTING_UNKNOWN"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "EventsService"
        ]
      },
      "delete": {
        "summary": "RemovePupils removes the pupils with the given IDs",
        "operationId": "EventsService_RemovePupils",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pupilIds",
            "description": "ids of the pupils deleted.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "EventsService"
        ]
      },
      "post": {
        "summary": "AddPupils adds the given pupils and returns the ids of the added",
        "operationId": "EventsService_AddPupils",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AddPupilsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddPupilsRequest"
            }
          }
        ],
        "tags": [
          "EventsService"
        ]
      }
    },
    "/v1/pupils/{id}": {
      "get": {
        "summary": "FindPupilByID returns a pupil with the given ID and a list of events they has attended",
        "operationId": "EventsService_FindPupilByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FindPupilByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventFilters.from",
            "description": "include events occurred since this date.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "eventFilters.to",
            "description": "include events occurred up to this date.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "eventFilters.name",
            "description": "name of the event.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "eventFilters.resourcesAllowed",
            "description": "resources permitted to be brought to this event.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "RESOURCE_UNKNOWN",
                "RESOURCE_GADGETS",
                "RESOURCE_PAPER",
                "RESOURCE_PLASTIC"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "eventSorting",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "EVENT_SORTING_UNKNOWN",
              "EVENT_SORTING_DATE_ASC",
              "EVENT_SORTING_DATE_DESC",
              "EVENT_SORTING_GADGETS",
              "EVENT_SORTING_NAME_ASC",
              "EVENT_SORTING_NAME_DESC",
              "EVENT_SORTING_PAPER",
              "EVENT_SORTING_PLASTIC"
            ],
            "default": "EVENT_SORTING_UNKNOWN"
          }
        ],
        "tags": [
          "EventsService"
        ]
      }
    },
    "/v1/pupils/{pupilId}": {
      "put": {
        "summary": "ChangePupilClass changes the class of the pupil",
        "operationId": "EventsService_ChangePupilClass",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pupilId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ChangePupilClassRequest"
            }
          }
        ],
        "tags": [
          "EventsService"
        ]
      }
    }
  },
  "definitions": {
    "eventsv1Pupil": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "class": {
          "type": "string",
          "title": "name of the class as it was on the date of the event"
        },
        "resourcesBrought": {
          "$ref": "#/definitions/v1ResourcesBrought",
          "title": "amount of the resources the pupil brought to the event"
        }
      },
      "title": "Pupils bring recyclable materials (resources) to the events.\nThis message is used in the context of a single event"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AddPupilsRequest": {
      "type": "object",
      "properties": {
        "pupils": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AddPupilsRequestPupil"
          },
          "title": "pupils to be added"
        }
      }
    },
    "v1AddPupilsRequestPupil": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "class": {
          "type": "string",
          "title": "class name as it is now (class name changes depending on the date)"
        }
      }
    },
    "v1AddPupilsResponse": {
      "type": "object",
      "properties": {
        "pupilIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ids of the pupils added"
        }
      }
    },
    "v1ChangePupilClassRequest": {
      "type": "object",
      "properties": {
        "pupilId": {
          "type": "string"
        },
        "class": {
          "type": "string",
          "title": "class name as it is now (class name changes depending on the date)"
        }
      }
    },
    "v1ChangePupilResourcesRequest": {
      "type": "object",
      "properties": {
        "eventId": {
          "type": "string"
        },
        "pupilId": {
          "type": "string"
        },
        "resourcesBrought": {
          "$ref": "#/definitions/v1ResourcesBrought",
          "title": "amount of resources brought by the pupil to the event"
        }
      }
    },
    "v1Class": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name of the class as it was on the date of the event"
        },
        "resourcesBrought": {
          "$ref": "#/definitions/v1ResourcesBrought",
          "title": "amount of the resources the class brought to the event"
        }
      },
      "title": "Class is a school class consisting of pupils. This message is used in the context of a single event"
    },
    "v1ClassAggr": {
      "type": "object",
      "properties": {
        "letter": {
          "type": "string",
          "title": "letter is the letter of the class"
        },
        "dateFormed": {
          "type": "string",
          "format": "date-time",
          "title": "date the class was formed on"
        },
        "resourcesBrought": {
          "$ref": "#/definitions/v1ResourcesBrought",
          "title": "resources the class has brought to all the events that passed the filters"
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Event"
          },
          "title": "array of events with their names and the amount of resources brought by the class"
        }
      },
      "title": "ClassAggr is used in the context of many events the class has participated in.\nNote, that the name of the class changes depending on the date of a particular event. Hence, we send its\nletter and the date it was formed on instead of its name"
    },
    "v1ClassSorting": {
      "type": "string",
      "enum": [
        "CLASS_SORTING_UNKNOWN",
        "CLASS_SORTING_GADGETS",
        "CLASS_SORTING_NAME_ASC",
        "CLASS_SORTING_NAME_DESC",
        "CLASS_SORTING_PAPER",
        "CLASS_SORTING_PLASTIC"
      ],
      "default": "CLASS_SORTING_UNKNOWN",
      "title": "ClassSorting shows how classes can be sorted"
    },
    "v1CreateEventRequest": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "title": "event date"
        },
        "name": {
          "type": "string"
        },
        "resourcesAllowed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Resource"
          },
          "title": "resources permitted on the event"
        }
      }
    },
    "v1CreateEventResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1Event": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "title": "date on which the event will take place"
        },
        "name": {
          "type": "string"
        },
        "resourcesAllowed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Resource"
          },
          "title": "types of resources allowed to be brought to this event"
        },
        "resourcesBrought": {
          "$ref": "#/definitions/v1ResourcesBrought",
          "title": "amount of the resources gathered at the event"
        }
      },
      "title": "Event is a meeting of pupils who bring in recyclables\nThe goal of the event is to gather as many recyclable materials (resources) as possible"
    },
    "v1EventFilters": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time",
          "title": "include events occurred since this date"
        },
        "to": {
          "type": "string",
          "format": "date-time",
          "title": "include events occurred up to this date"
        },
        "name": {
          "type": "string",
          "title": "name of the event"
        },
        "resourcesAllowed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Resource"
          },
          "title": "resources permitted to be brought to this event"
        }
      },
      "title": "EventFilters is used to filter the events"
    },
    "v1EventSorting": {
      "type": "string",
      "enum": [
        "EVENT_SORTING_UNKNOWN",
        "EVENT_SORTING_DATE_ASC",
        "EVENT_SORTING_DATE_DESC",
        "EVENT_SORTING_GADGETS",
        "EVENT_SORTING_NAME_ASC",
        "EVENT_SORTING_NAME_DESC",
        "EVENT_SORTING_PAPER",
        "EVENT_SORTING_PLASTIC"
      ],
      "default": "EVENT_SORTING_UNKNOWN",
      "title": "EventSorting shows how events can be sorted"
    },
    "v1FindClassesResponse": {
      "type": "object",
      "properties": {
        "classes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ClassAggr"
          },
          "title": "list of classes with aggregated info about the resources a class has brought to every event that\npassed the filters and a list of those events for each class"
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "total classes found"
        }
      }
    },
    "v1FindEventByIDResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/v1Event",
          "title": "event's info with the resources collected on that event"
        }
      }
    },
    "v1FindEventClassesResponse": {
      "type": "object",
      "properties": {
        "classes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Class"
          },
          "title": "list of found classes with the resources each class brought to the event"
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "total classes found"
        }
      }
    },
    "v1FindEventPupilByIDResponse": {
      "type": "object",
      "properties": {
        "pupil": {
          "$ref": "#/definitions/eventsv1Pupil",
          "title": "pupil info with the resources they brought to the event"
        }
      }
    },
    "v1FindEventPupilsResponse": {
      "type": "object",
      "properties": {
        "pupils": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/eventsv1Pupil"
          },
          "title": "list of found pupils with the resources each pupil brought to the event"
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "total pupils found"
        }
      }
    },
    "v1FindEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Event"
          },
          "title": "list of the events that passed the provided filters"
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "total events found"
        }
      }
    },
    "v1FindPupilByIDResponse": {
      "type": "object",
      "properties": {
        "pupil": {
          "$ref": "#/definitions/v1PupilAggr",
          "title": "pupil with aggregated info about the resources the pupil brought to every event that\npassed the filters and a list of those events"
        }
      }
    },
    "v1FindPupilsResponse": {
      "type": "object",
      "properties": {
        "pupils": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PupilAggr"
          },
          "title": "list of pupils with aggregated info about the resources a pupil has brought to every event that\npassed the filters and a list of those events for each pupil"
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "total pupils found"
        }
      }
    },
    "v1PupilAggr": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "classLetter": {
          "type": "string"
        },
        "classDateFormed": {
          "type": "string",
          "format": "date-time"
        },
        "resourcesBrought": {
          "$ref": "#/definitions/v1ResourcesBrought",
          "title": "resources that the pupil has brought to all the events that passed the filters"
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Event"
          },
          "title": "array of events with their names and the amount of resources brought by the pupil"
        }
      },
      "title": "PupilAggr is used in the context of many events the pupil has participated in.\nNote, that the name of the class changes depending on the date of a particular event. Hence, we send its\nletter and the date it was formed on instead of its name"
    },
    "v1PupilSorting": {
      "type": "string",
      "enum": [
        "PUPIL_SORTING_UNKNOWN",
        "PUPIL_SORTING_GADGETS",
        "PUPIL_SORTING_NAME_ASC",
        "PUPIL_SORTING_NAME_DESC",
        "PUPIL_SORTING_PAPER",
        "PUPIL_SORTING_PLASTIC"
      ],
      "default": "PUPIL_SORTING_UNKNOWN",
      "title": "PupilSorting shows how pupils can be sorted"
    },
    "v1Resource": {
      "type": "string",
      "enum": [
        "RESOURCE_UNKNOWN",
        "RESOURCE_GADGETS",
        "RESOURCE_PAPER",
        "RESOURCE_PLASTIC"
      ],
      "default": "RESOURCE_UNKNOWN",
      "title": "Resource is a concrete type of recyclables brought by the pupils to the events"
    },
    "v1ResourcesBrought": {
      "type": "object",
      "properties": {
        "gadgets": {
          "type": "number",
          "format": "float"
        },
        "paper": {
          "type": "number",
          "format": "float"
        },
        "plastic": {
          "type": "number",
          "format": "float"
        }
      },
      "title": "ResourceBrought message shows how many resources a pupil/class has brought to an event or how many resources were\ncollected on an event"
    }
  }
}
