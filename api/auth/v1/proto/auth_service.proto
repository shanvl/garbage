syntax = "proto3";

import "auth.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-swagger/options/annotations.proto";

package shanvl.garbage.auth.v1;

option go_package = ".;authv1pb";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    security_definitions: {
        security: {
            key: "bearer"
            value: {
                type: TYPE_API_KEY
                in: IN_HEADER
                name: "Authorization"
                description: "Authentication token, prefixed by Bearer: 'Bearer <token>'"
            }
        }
    }
    security: {
        security_requirement: {
            key: "bearer";
        }
    }
};

service AuthService {
    rpc ActivateUser (ActivateUserRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/me"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            security: {}
        };
    }
    rpc Authorize (AuthorizeRequest) returns (AuthorizeResponse) {
    }
    rpc ChangeUserRole (ChangeUserRoleRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/v1/users/{id}"
            body: "*"
        };
    }
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
            post: "/v1/users"
            body: "*"
        };
    }
    rpc DeleteUser (DeleteUserRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/users/{id}"
            body: "*"
        };
    }
    rpc FindUser (FindUserRequest) returns (FindUserResponse) {
        option (google.api.http) = {
            get: "/v1/users/{id}"
        };
    }
    rpc FindUsers (FindUsersRequest) returns (FindUsersResponse) {
        option (google.api.http) = {
            get: "/v1/users"
        };
    }
    rpc Login (LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/v1/me/clients"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            security: {} };
    }
    rpc Logout (LogoutRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/me/clients/{client_id}"
            body: "*"
        };
    }
    rpc LogoutAllClients (google.protobuf.Empty) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/me/clients"
        };
    }
    rpc RefreshTokens (RefreshTokensRequest) returns (RefreshTokensResponse) {
        option (google.api.http) = {
            put: "/v1/me/clients/{client_id}"
            body: "*"
        };
    }
}

message ActivateUserRequest {
    string activation_token = 1;
    string first_name = 2;
    string last_name = 3;
    string password = 4;
}

message AuthorizeRequest {
    string method = 1;
    string token = 2;
}

message AuthorizeResponse {
    string client_id = 1;
    string user_id = 2;
}

message ChangeUserRoleRequest {
    string id = 1;
    Role role = 2;
}

message CreateUserRequest {
    string email = 1;
}

message CreateUserResponse {
    string id = 1;
    string activation_token = 2;
}

message DeleteUserRequest {
    string id = 1;
}

message FindUserRequest {
   string id = 1;
}

message FindUserResponse {
    User user = 1;
}

message FindUsersRequest {
    string name_and_email = 1;
    UserSorting sorting = 2;
    uint32 amount = 3;
    uint32 skip = 4;
}

message FindUsersResponse {
    repeated User users = 1;
    uint32 total = 2;
}

message LoginRequest {
    string email = 1;
    string password = 2;
}

message LoginResponse {
    Tokens tokens = 2;
    User user = 1;
}

message LogoutRequest {
    string client_id = 1;
}

message RefreshTokensRequest {
    string client_id = 1;
    string refresh_token = 2;
}

message RefreshTokensResponse {
    Tokens tokens = 1;
}
